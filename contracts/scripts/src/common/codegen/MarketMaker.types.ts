/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.9.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type TokenUnverified = {
  native: {
    denom: string;
  };
} | {
  cw20: {
    address: string;
  };
};
export interface InstantiateMsg {
  controller?: string[] | null;
  lending_platform?: string | null;
  oracle?: string | null;
  token: TokenUnverified;
  worker?: string | null;
}
export type ExecuteMsg = {
  accept_admin_role: {};
} | {
  update_config: {
    admin?: string | null;
    controller?: string[] | null;
    lending_platform?: string | null;
    oracle?: string | null;
    token?: TokenUnverified | null;
    worker?: string | null;
  };
} | {
  remove_offers: {
    collection: string;
    recipient?: string | null;
  };
} | {
  pause: {};
} | {
  unpause: {};
} | {
  set_collection: {
    collection: string;
    owner: string;
  };
} | {
  remove_collections: {
    collection_list: string[];
  };
} | {
  deposit_liquidity: {
    collection: string;
  };
} | {
  withdraw_undistributed_liquidity: {
    collection: string;
  };
} | {
  withdraw_collateral: {
    collection: string;
  };
} | {
  update_offers: {
    collection: string;
    from_to_price_list: [Uint128, Uint128][];
  };
} | {
  accept_offers: {
    bidded_collateral_item_list: BiddedCollateralItem[];
  };
};
export type Uint128 = string;
export type Decimal = string;
export type BidType = "liquidation_bid" | "collection_offer";
export type Addr = string;
export interface BiddedCollateralItem {
  bid_amount: Uint128;
  bid_creation_date: number;
  bid_discount: Decimal;
  bid_type: BidType;
  collateral_price: Uint128;
  collection: Addr;
  liquidation_price: Uint128;
  liquidator: Addr;
  owner: Addr;
  token_item: TokenItem;
}
export interface TokenItem {
  creation_date: number;
  id: string;
}
export type QueryMsg = {
  query_config: {};
} | {
  query_offer_prices_list: {
    amount: number;
    start_after?: string | null;
  };
} | {
  query_offer_prices: {
    collection: string;
  };
} | {
  query_collection_owner_list: {
    amount: number;
    start_after?: string | null;
  };
} | {
  query_collection_owner: {
    collection: string;
  };
} | {
  query_liquidity_list: {
    amount: number;
    start_after?: string | null;
  };
} | {
  query_liquidity: {
    collection: string;
  };
} | {
  query_collateral_list: {
    amount: number;
    start_after?: string | null;
  };
} | {
  query_collateral: {
    collection_owner: string;
  };
};
export interface MigrateMsg {
  version: string;
}
export type ArrayOfCollectionInfoForAddr = CollectionInfoForAddr[];
export interface CollectionInfoForAddr {
  collection_address: Addr;
  token_id_list: string[];
}
export type ArrayOfCollateralListResponseItem = CollateralListResponseItem[];
export interface CollateralListResponseItem {
  collection_list: CollectionInfoForAddr[];
  collection_owner: Addr;
}
export interface CollectionOwnerForAddr {
  collection_address: Addr;
  owner: Addr;
}
export type ArrayOfCollectionOwnerForAddr = CollectionOwnerForAddr[];
export type Token = {
  native: {
    denom: string;
  };
} | {
  cw20: {
    address: Addr;
  };
};
export interface Config {
  admin: Addr;
  controller?: Addr[] | null;
  lending_platform?: Addr | null;
  oracle?: Addr | null;
  token: Token;
  worker?: Addr | null;
}
export interface LiquidityInfo {
  amount_undistributed: Uint128;
  collection_address: Addr;
  price_list: Uint128[];
}
export type ArrayOfLiquidityInfo = LiquidityInfo[];
export interface OffersResponse {
  collection_address: Addr;
  price_list: Uint128[];
}
export type ArrayOfOffersResponse = OffersResponse[];